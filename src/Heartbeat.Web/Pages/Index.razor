@page "/"
@using Heartbeat.Domain
@using Heartbeat.Runtime
@inject RuntimeContext Context

<PageTitle>Home</PageTitle>

<p>
    <RadzenLabel Text="Dump" Style="vertical-align: middle;" />
    <RadzenTextBox Value="@Context.DumpPath" Disabled="true" Class="w-100" />
</p>
<p>
    <RadzenLabel Text="Dac" Style="vertical-align: middle;" />
    <RadzenTextBox Value="@Context.Runtime.ClrInfo.DacInfo.PlatformAgnosticFileName" Disabled="true" Class="w-100" />
</p>
<p>
    <RadzenCheckBox Name="CanWalkHeapCheckBox" Value="@Context.Heap.CanWalkHeap" Disabled="true" TValue="bool" />
    <RadzenLabel Text="Can walk heap" Component="CanWalkHeapCheckBox" Style="margin-left: 8px; vertical-align: middle;" />
</p>

<RadzenDataGrid TItem="HeapSegment" AllowFiltering="true" AllowColumnResize="true" AllowSorting="true"
                PageSize="12" AllowPaging="true"
                Data="@Segments">
    <Columns>
        <RadzenDataGridColumn TItem="HeapSegment" Property="IsEphemeralSegment" Title="Ephemeral">
            <FooterTemplate>
                @Segments.Count(s => s.IsEphemeralSegment)
            </FooterTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="HeapSegment" Property="IsLargeObjectSegment" Title="Large Object">
            <FooterTemplate>
                @Segments.Count(s => s.IsLargeObjectSegment)
            </FooterTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="HeapSegment" Property="IsPinnedObjectSegment" Title="Pinned Object">
            <FooterTemplate>
                @Segments.Count(s => s.IsPinnedObjectSegment)
            </FooterTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="HeapSegment" Property="Size" Title="Size">
            <FooterTemplate>
                @Size.Sum(@Segments.Select(s => s.Size))
            </FooterTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="HeapSegment" Property="Start" Title="Start" />
        <RadzenDataGridColumn TItem="HeapSegment" Property="End" Title="End" />
    </Columns>
</RadzenDataGrid>

@code {
    public IReadOnlyList<HeapSegment> Segments { get; private set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Segments = Context.Heap.Segments.Select(s => new HeapSegment(
                new Address(s.Start),
                new Address(s.End),
                s.IsEphemeralSegment,
                s.IsLargeObjectSegment,
                s.IsPinnedObjectSegment)).ToArray();
    }

}
